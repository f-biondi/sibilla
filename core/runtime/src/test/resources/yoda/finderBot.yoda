param na = 3;

agent Finder =
    state:
        int dirx = 0;
        int diry = 0;
    features:
        int x = 0;
        int y = 0;
    observations:
        bool found = false;
        bool closest = false;
        int distx = 0;
        int disty = 0;
    actions:
        moveNorth [ dirx <- 0; diry <- 1;]
        moveSouth [ dirx <- 0; diry <- 1;]
        moveEast [ dirx <- 0; diry <- 1;]
        moveWest [ dirx <- 0; diry <- 1;]
        stop [ dirx <- 0; diry <- 0; ]
    behaviour:
        when !closest -> [ stop: 1 ]
        orwhen goal -> [ stop: 1]
        orwhen distx>0 -> [moveWest: 1]
        orwhen distx<0 -> [moveEast: 1]
        orwhen disty>0 -> [moveNorth: 1]
        orwhen disty<0 -> [moveSouth: 1]
end

element Target =
    int posx = 0;
    int posy = 0;
end

environment:
    sensing:
        Finder [
            closest <- min Target : ( abs(it.x - posx) + abs(it.y - posy) )
            goal <- any Target : (posy==it.y)&&(posx==it.x);
            distx <- any Target : (it.x - posx);
            disty <- any Target : (it.y - posy);
        ]

    dynamic:
        Finder [
           x <- x + dirx;
           y <- y + diry;
        ]
end

configuration Main:
    Target [ posx = 5; posy = 5; ]
    Finder [ x = 2; y = 3 ]
end